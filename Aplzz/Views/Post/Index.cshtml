@model Aplzz.ViewModels.PostViewModel
@{
    ViewData["Title"] = "Feed";
}
    <div class="container mt-4">
        <div class="mb-4 text-center">
            <a asp-controller="Post" asp-action="Create" class="btn btn-primary">Opprett nytt innlegg</a>
        </div>
        <h1 class="mb-4 text-center">@Model.CurrentViewName</h1>

        @if (Model.Posts != null && Model.Posts.Any())
        {
            <div class="d-flex flex-column align-items-center">
                @foreach (var post in Model.Posts)
                {
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            @if (!string.IsNullOrEmpty(post.ImageUrl))
                            {
                                <img src="@post.ImageUrl" class="card-img-top" alt="Post bilde">
                            }
                            <div class="card-body">
                                <h5 class="card-title">@post.Content</h5>
                                <p class="text-muted">Postet: @post.CreatedAt.ToString("dd.MM.yyyy HH:mm")</p>

                                <!-- Like Button with AJAX -->
                                @{
                                    var isLiked = post.Likes != null && post.Likes.Any(l => l.UserId == 1);
                                }
                                <button 
                                    class="btn btn-primary btn-sm like-button @(isLiked ? "liked" : "")" 
                                    data-post-id="@post.PostId" 
                                    data-liked="@isLiked">
                                    <i class="fas fa-thumbs-up"></i>
                                    <span class="like-text">@(isLiked ? "Likt" : "Lik")</span>
                                    (<span class="like-count">@(post.Likes?.Count ?? 0)</span>)
                                </button>
                                <div class="like-error"></div>

                                <button class="btn btn-secondary btn-sm" data-bs-toggle="collapse" data-bs-target="#commentForm-@post.PostId">Kommenter</button>

                                <div class="collapse" id="commentForm-@post.PostId">
                                    <form class="comment-form" data-post-id="@post.PostId">
                                        <div class="mb-2">
                                            <input type="text" class="form-control comment-input" placeholder="Skriv en kommentar..." required />
                                        </div>
                                        <button type="submit" class="btn btn-success">
                                            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                            Legg til kommentar
                                        </button>
                                    </form>
                                    <div class="comment-error text-danger mt-2" style="display: none;"></div>
                                </div>

                                <div class="mt-3">
                                    <h6>Kommentarer:</h6>
                                    <div class="comments-container">
                                        @if (post.Comments != null)
                                        {
                                            @foreach (var comment in post.Comments)
                                            {
                                                <div class="border-top pt-2">
                                                    <p>@comment.Text</p>
                                                    <small class="text-muted">@comment.CommentedAt.ToString("dd.MM.yyyy HH:mm")</small>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end">
                                <a asp-action="Update" asp-route-id="@post.PostId" class="btn btn-info btn-sm">Rediger</a>
                                <a asp-action="Delete" asp-route-id="@post.PostId" class="btn btn-danger btn-sm ms-1">Slett</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-center">Ingen innlegg å vise.</p>
        }

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function() {
            // Like button click event
            $(".like-button").click(function(e) {
                e.preventDefault();
                const button = $(this);
                const errorDiv = button.siblings('.like-error');
                const postId = button.data("post-id");
                
                button.prop('disabled', true);
                
                $.ajax({
                    url: "/Post/LikePost",
                    method: "POST",
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    data: { postId: postId },
                    success: function(response) {
                        button.find(".like-count").text(response.likesCount);
                        button.toggleClass('liked', response.isLiked);
                        
                        const likeText = response.isLiked ? "Likt" : "Lik";
                        button.find(".like-text").text(likeText);
                        
                        button.animate({ scale: 1.2 }, 100)
                             .animate({ scale: 1.0 }, 100);
                        
                        errorDiv.hide();
                    },
                    error: function(xhr) {
                        errorDiv.text("Kunne ikke prosessere like. Prøv igjen senere.").show();
                    },
                    complete: function() {
                        button.prop('disabled', false);
                    }
                });
            });

            // Comment form submission
            $(".comment-form").submit(function(e) {
                e.preventDefault();
                const form = $(this);
                const postId = form.data("post-id");
                const input = form.find(".comment-input");
                const button = form.find("button");
                const spinner = button.find(".spinner-border");
                const errorDiv = form.siblings(".comment-error");
                const commentsContainer = form.closest(".card-body").find(".comments-container");

                const commentText = input.val().trim();
                if (!commentText) return;

                // Disable form and show loading state
                button.prop("disabled", true);
                spinner.removeClass("d-none");
                errorDiv.hide();

                $.ajax({
                    url: "/Post/AddComment",
                    method: "POST",
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    data: { postId: postId, commentText: commentText },
                    success: function(response) {
                        // Add new comment to UI
                        const newComment = `
                            <div class="border-top pt-2">
                                <p>${response.text}</p>
                                <small class="text-muted">${response.commentedAt}</small>
                            </div>
                        `;
                        commentsContainer.prepend(newComment);
                        
                        // Clear input and reset form
                        input.val("");
                        form.closest(".collapse").collapse("hide");
                    },
                    error: function(xhr) {
                        const error = xhr.responseJSON?.error || "Kunne ikke legge til kommentar. Prøv igjen senere.";
                        errorDiv.text(error).show();
                    },
                    complete: function() {
                        button.prop("disabled", false);
                        spinner.addClass("d-none");
                    }
                });
            });
        });
    </script>